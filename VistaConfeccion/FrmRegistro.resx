<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PcbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAgAAAAIAAAACAAAAAgAAAAEAAAACAAAAAQAAAAEAAAIBAAAEAQAABAEAAAQBAAACAQAAAgEAAAAC
        AAAAAgAAAAMAAAADAAAAAwAAAAIAAAABAAAAAAAAAAACAAAAAgAAAAAAAAEAAAACAAAAAgAAAAIAAAAC
        AAAAAgAAAAIAAAABAAAAAgAAAAIAAAACAAAAAQAAAAEAAAABAAACAQAABAEAAAYAAAAGAAAABAEAAAIB
        AAACAQAAAAIAAAACAAAAAwAAAAMAAAADAAAAAgAAAAEAAAIAAAACAAAAAAAAAAABAAAAAQAAAAIAAAAC
        AAAAAgAAAAIAAAACAAAAAgAAAgAAAAABAAAAAQAAAgAAAAQBAAAGAAAABgAAAAYAAAAIAAAACAAAAAgA
        AAAGAAAABAEAAAIBAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAACAAAABAAAAAQAAAACAAAAAgAAAAIA
        AAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAEAAIAAgAAAAAAAAAEAAAACgAAAAwAAAAKAAAADAAAAAwA
        AAAMAAAACgAAAAgAAAAEAQAAAgEAAAACAAAAAgAAAAIAAAACAAAAAgAAAgEAAAQAAAAGAAAACAAAAAgA
        AAAIAAAABgAAAAYAAAAEAQAAAAIAAAACAAAAAgAAAAIAAAYAAwAEAAIAAgAAAAYAAAA6KCcKPCklMDoq
        JDY6KiQ2PSomNj0qJjA3JiIIFAgDAAYBAAACAQAAAAIAAAACAAAAAQAAAAEAAAIAAAAEAAAACQEAADcq
        KAw2JiQyOignNjomJDY9KSg2NygmLjElIAYJAQAABgAAAAIBAAADAgAABgADAAQAAwACAAIABgAAAD4o
        JxZEKCS7QCoi6z8pIetAJiHrPiYj3T0qJkI1JiIACAEAAAIBAAAAAQAAAAIAAAAAAAAAAAAABAAAAAgA
        AAA0JyQAPCwnVjwmI+VAJSPrQigl60AoJes/KialPi0pDg0AAAAIAAAABgAAAAUCAAAGAAMABAADAAIA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAEAgIABAAAAAYAAAALAQAAPCklFkApJK9CKSLZRCki2UQpItlEKCTZRCgkmz4oJQwJAQAAAwIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAAAABAAAAAQAAAA2KScAOiklFjwqJB48KiQePikkHj4oJR48KSUSOCknAAoD
        AgAAAAAAAQEBAAEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAIAAAAEAAAABAAAAAIBAAAEAQAABgEAAAgBAAAIAQAACAAAAAgA
        AAAGAAAAAgAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAIAAAACAAAAAAEAAAABAAAAAQAAAgAAAAIA
        AAACAAAAAgAAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAA
        AAAAAAAAAgAAAAIAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAAA
        AAAAAAAAAAAAAAAAAAACAAAAAgAAAAAAAAAAAAAAAAEAAAABAAAAAgAAAAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////Af+A/wH/gP8A/wH/gP8B/4D+Af/AfgP/wH
        4D/4A8Af4APAD8ADwAOAAYABgAGAAYABAAGAAAABwAAAA/+AA///wAP//8AD///gB///4Af//+AH///w
        D///8A////gf//////////////////////8=
</value>
  </data>
</root>